import React, { useState, useEffect } from 'react'
import { Link, useNavigate, useParams, useSearchParams } from 'react-router-dom'

import LinkButton from '../../Components/LinkButton';
import IconButton from '../../Components/IconButton';
import PopupModal from '../../Components/Popup'

import { SERVER_BASE_URL, useRouteData } from '../../App'

import { HiOutlineDocumentReport } from "react-icons/hi";
import { MdAdd, MdCheck, MdClose, MdOutlineFileUpload } from 'react-icons/md'
import { toast } from 'react-toastify';

function CreateReport() {
  const navigate = useNavigate()
  const pathParams = useParams()
  const [searchParams, setSearchParams] = useSearchParams();

  const reportsList = useRouteData('0-3')['reportList'];

  function uploadReport() {
    const report = document.getElementById('upload_report').files[0]
    var fileReader = new FileReader()
    fileReader.onloadend = (e) => {
      // Generate POST Body
      var out = {}
      try {
        out = {
          "project_id": pathParams.projectid,
          "report": JSON.parse(e.target.result)
        }
      } catch (error) {
        toast.error('Invalid JSON File!')
        return
      }

      fetch(`${SERVER_BASE_URL}/api/reports/upload-report?uploadedVia=CodeFree%20GUI`, {
        method: 'post',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(out)
      }).then(async (resp) => {
        if (resp.status == 201) {
          const out_obj = await resp.json()
          navigate(`/projects/${pathParams.projectid}/reports/${out_obj['report_id']}`)
        }
        else if (resp.status == 404) {
          toast.error("Project Not Found.")
        }
        else if (resp.status == 406) {
          toast.error("Invalid Report Data.")
        }
        else if (resp.status == 409) {
          var error_obj = await resp.json()
          toast.error(() => (<span>
            {`Error Uploading Report - Already exists : `}
            <a href={error_obj['report_url']}>Report {error_obj['report_id']}</a>
          </span>))
        }
        else {
          toast.error(`Error Uploading Report (Code : ${resp.statusText})`)
        }
      })

    }
    fileReader.readAsText(report)
  }

  return (
    <div style={{
      padding: '30px',
      display: 'flex',
      flexDirection: 'column',
      alignItems: 'stretch',
      height: '100%',
      gap: '20px'
    }}>
        <div style={{
          background: 'var(--background)',
          borderRadius: 'var(--border-radius)',
          padding: '20px',
          paddingTop: '0px',
          border: '1px solid var(--border-color)',
          minWidth: '500px',
          maxWidth: '500px',
          color: 'var(--foreground)',
          // height: '80vh',
        }}>
          <h3 style={{
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'space-between'
          }}>
            <span>
              Upload a Report
            </span>
            <div style={{
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              gap: '5px'
            }}>
              <IconButton
                tabIndex={4}
                title="Cancel"
                icon={<MdClose style={{
                  fontSize: '1.25rem'
                }} />}
                onClick={() => {
                  if (reportsList.length == 0) {
                    navigate(`/projects/${pathParams.projectid}`)
                  }
                  else {
                    navigate(`/projects/${pathParams.projectid}/reports`)
                  }
                }}
              />
              <IconButton
                tabIndex={3}
                title="Create Project"
                icon={<MdCheck style={{
                  fontSize: '1.25rem'
                }} />}
                onClick={() => {
                  uploadReport()
                }}
              />
            </div>
          </h3>
          <div>
            <div style={{
              display: 'flex',
              flexDirection: 'column',
              alignItems: 'stretch',
              justifyContent: 'center',
              gap: '10px',
            }}>
              <label htmlFor="upload_report" style={{
                fontSize: '0.9rem',
                fontWeight: '600'
              }}>
                Upload Report (JSON file generated by CodeFree) :
              </label>
              <input type="file" name="upload_report" id="upload_report" placeholder='Choose Report File' accept='application/json' />
            </div>
          </div>
        </div>
    </div>
  )
}

export default CreateReport